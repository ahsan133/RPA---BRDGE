<Activity mc:Ignorable="sap sap2010" x:Class="BankStatements" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:maes="clr-namespace:Microsoft.Activities.Extensions.Statements;assembly=Microsoft.Activities.Extensions" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:p="clr-namespace:PDF;assembly=pdfLibrary" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.Collections;assembly=mscorlib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System" xmlns:scg1="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="BankStatementPath" Type="InArgument(x:String)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>748,4477</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.Core.Activities.OCR.Engines</x:String>
      <x:String>Microsoft.Activities.Extensions.Statements</x:String>
      <x:String>PDF</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>Microsoft.Activities.Extensions</AssemblyReference>
      <AssemblyReference>pdfLibrary</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="UOB BankStatements" sap:VirtualizedContainerService.HintSize="682,4312" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="extractedBankStatement" />
      <Variable x:TypeArguments="sd:DataTable" Name="regexTable" />
      <Variable x:TypeArguments="sd:DataTable" Name="outputTable" />
      <Variable x:TypeArguments="scg:SortedDictionary(x:String, x:Double)" Name="Dictionary" />
      <Variable x:TypeArguments="s:String[]" Name="files" />
      <Variable x:TypeArguments="sd:DataTable" Name="regexTable2" />
      <Variable x:TypeArguments="x:Boolean" Default="False" Name="Type2" />
      <Variable x:TypeArguments="x:Double" Name="lowestBalance" />
      <Variable x:TypeArguments="x:Int32" Name="fileIndex" />
      <Variable x:TypeArguments="x:Boolean" Default="False" Name="Type3" />
      <Variable x:TypeArguments="sd:DataTable" Name="regexTable3" />
      <Variable x:TypeArguments="scg1:IEnumerable(str:Match)" Name="regexOutput" />
      <Variable x:TypeArguments="x:String" Name="line" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="instance" />
      <Variable x:TypeArguments="x:String" Name="finalInstance" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="TotalTransactions" />
      <Variable x:TypeArguments="x:String" Name="finalTransaction" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg1:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg1:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:BuildDataTable DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="640,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Field&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Value&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Field&gt;Average amount for Deposits (over 6 months)&lt;/Field&gt;&#xA;    &lt;Value&gt;(?&amp;lt;=Total\sin\sAccount\sCurrency\s([\w\W]*?)Deposit\s\s)[\w\W]*?(?=\s\sWithdrawal)&lt;/Value&gt;&#xA;  &lt;/TableName&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Field&gt;Average amount for Withdrawals (over 6 months)&lt;/Field&gt;&#xA;    &lt;Value&gt;(?&amp;lt;=Total\sin\sAccount\sCurrency\s([\w\W]*?)Withdrawal\s\s)[\w\W]*?(?=\s\sBalance)&lt;/Value&gt;&#xA;  &lt;/TableName&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Field&gt;Average Bank Balance (over 6 months)&lt;/Field&gt;&#xA;    &lt;Value&gt;(?&amp;lt;=Total\sin\sAccount\sCurrency\s([\w\W]*?)Balance\s\s)[\w\W]*?(?=\s\s\s\sNote:)&lt;/Value&gt;&#xA;  &lt;/TableName&gt;&#xA;&lt;/NewDataSet&gt;">
      <ui:BuildDataTable.DataTable>
        <OutArgument x:TypeArguments="sd:DataTable">
          <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">regexTable</mca:CSharpReference>
        </OutArgument>
      </ui:BuildDataTable.DataTable>
    </ui:BuildDataTable>
    <ui:BuildDataTable DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="640,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_3" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Field&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Value&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Field&gt;Average amount for Deposits (over 6 months)&lt;/Field&gt;&#xA;    &lt;Value&gt;(?&amp;lt;=Total\sin\sAccount\sCurrency\s)[\w\W]*?(?=\s)&lt;/Value&gt;&#xA;  &lt;/TableName&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Field&gt;Average amount for Withdrawals (over 6 months)&lt;/Field&gt;&#xA;    &lt;Value&gt;(?&amp;lt;=Total\sin\sAccount\sCurrency\s([\w\W]*?)\s)[\w\W]*?(?=\s)&lt;/Value&gt;&#xA;  &lt;/TableName&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Field&gt;Average Bank Balance (over 6 months)&lt;/Field&gt;&#xA;    &lt;Value&gt;(\d{2}[/]\d{2}[/]\d{4}).*(?=[\w\W]*Total\sin\sAccount\sCurrency)&lt;/Value&gt;&#xA;  &lt;/TableName&gt;&#xA;&lt;/NewDataSet&gt;">
      <ui:BuildDataTable.DataTable>
        <OutArgument x:TypeArguments="sd:DataTable">
          <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_14">regexTable2</mca:CSharpReference>
        </OutArgument>
      </ui:BuildDataTable.DataTable>
    </ui:BuildDataTable>
    <ui:BuildDataTable DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="640,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_4" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Column1&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Column2&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Column1&gt;Average amount for Deposits (over 6 months)&lt;/Column1&gt;&#xA;    &lt;Column2&gt;(?&amp;lt;=Total\sDeposits\u0028SGD\u0029\sTotal\sWithdrawals\u0028SGD\u0029\s\s)(.*?(?=\s))&lt;/Column2&gt;&#xA;  &lt;/TableName&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Column1&gt;Average amount for Withdrawals (over 6 months)&lt;/Column1&gt;&#xA;    &lt;Column2&gt;(?&amp;lt;=Total\sDeposits\u0028SGD\u0029\sTotal\sWithdrawals\u0028SGD\u0029\s\s[\w\W]*\s)(.*?(?=\sNote))&lt;/Column2&gt;&#xA;  &lt;/TableName&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Column1&gt;Average Bank Balance (over 6 months)&lt;/Column1&gt;&#xA;    &lt;Column2&gt;(\d{2}[/]\d{2}[/]\d{4}).*(?=[\w\W]*Total\sDeposits\u0028SGD\u0029\sTotal\sWithdrawals\u0028SGD\u0029)&lt;/Column2&gt;&#xA;  &lt;/TableName&gt;&#xA;&lt;/NewDataSet&gt;">
      <ui:BuildDataTable.DataTable>
        <OutArgument x:TypeArguments="sd:DataTable">
          <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_47">regexTable3</mca:CSharpReference>
        </OutArgument>
      </ui:BuildDataTable.DataTable>
    </ui:BuildDataTable>
    <ui:BuildDataTable DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="640,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_2" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Field&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Value&quot; msdata:Caption=&quot;&quot; default=&quot;0&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;">
      <ui:BuildDataTable.DataTable>
        <OutArgument x:TypeArguments="sd:DataTable">
          <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_4">outputTable</mca:CSharpReference>
        </OutArgument>
      </ui:BuildDataTable.DataTable>
    </ui:BuildDataTable>
    <Assign sap:VirtualizedContainerService.HintSize="640,60" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">
          <mca:CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_12">files</mca:CSharpReference>
        </OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">
          <mca:CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_137">Directory.GetFiles(BankStatementPath)</mca:CSharpValue>
        </InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="640,60" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:SortedDictionary(x:String, x:Double)">
          <mca:CSharpReference x:TypeArguments="scg:SortedDictionary(x:String, x:Double)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_26">Dictionary</mca:CSharpReference>
        </OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:SortedDictionary(x:String, x:Double)">
          <mca:CSharpValue x:TypeArguments="scg:SortedDictionary(x:String, x:Double)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_55">new SortedDictionary&lt;string,double&gt;()</mca:CSharpValue>
        </InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEachRow CurrentIndex="{x:Null}" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="640,378" sap2010:WorkflowViewState.IdRef="ForEachRow_4">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="440,230" sap2010:WorkflowViewState.IdRef="Sequence_9">
            <sap:WorkflowViewStateService.ViewState>
              <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg1:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <maes:AddToDictionary x:TypeArguments="x:String, x:Double" DisplayName="Add to dictionary" sap:VirtualizedContainerService.HintSize="398,138" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_1" Value="0">
              <maes:AddToDictionary.Dictionary>
                <InArgument x:TypeArguments="scg1:IDictionary(x:String, x:Double)">
                  <mca:CSharpValue x:TypeArguments="scg1:IDictionary(x:String, x:Double)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_59">Dictionary</mca:CSharpValue>
                </InArgument>
              </maes:AddToDictionary.Dictionary>
              <maes:AddToDictionary.Key>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_60">row.ItemArray[0].ToString()</mca:CSharpValue>
                </InArgument>
              </maes:AddToDictionary.Key>
            </maes:AddToDictionary>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
      <ui:ForEachRow.DataTable>
        <InArgument x:TypeArguments="sd:DataTable">
          <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_62">regexTable</mca:CSharpValue>
        </InArgument>
      </ui:ForEachRow.DataTable>
    </ui:ForEachRow>
    <ui:ForEach x:TypeArguments="x:Object" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="640,2395" sap2010:WorkflowViewState.IdRef="ForEach`1_1">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="file" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="604,2261" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Int32" Name="index" />
              <Variable x:TypeArguments="scg1:IEnumerable(str:Match)" Name="totalInstance" />
              <Variable x:TypeArguments="scg1:IEnumerable(str:Match)" Name="transactions" />
              <Variable x:TypeArguments="scg1:IEnumerable(str:Match)" Name="regexMatch" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg1:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ReadPDFText PreserveFormatting="{x:Null}" DisplayName="Read PDF Text" sap:VirtualizedContainerService.HintSize="562,59" sap2010:WorkflowViewState.IdRef="ReadPDFText_1" Range="All">
              <ui:ReadPDFText.FileName>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_11">file.ToString()</mca:CSharpValue>
                </InArgument>
              </ui:ReadPDFText.FileName>
              <ui:ReadPDFText.Text>
                <OutArgument x:TypeArguments="x:String">
                  <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">extractedBankStatement</mca:CSharpReference>
                </OutArgument>
              </ui:ReadPDFText.Text>
            </ui:ReadPDFText>
            <ui:ForEachRow DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="562,51" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Regex" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="875,1093" sap2010:WorkflowViewState.IdRef="Sequence_2">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="scg1:IEnumerable(str:Match)" Name="regexOutput" />
                      <Variable x:TypeArguments="s:String[]" Name="splitString" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg1:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:Matches sap:VirtualizedContainerService.HintSize="833,59" sap2010:WorkflowViewState.IdRef="Matches_1" IsBuilderTabModified="False" RegexOption="None">
                      <ui:Matches.Input>
                        <InArgument x:TypeArguments="x:String">
                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_2">extractedBankStatement</mca:CSharpValue>
                        </InArgument>
                      </ui:Matches.Input>
                      <ui:Matches.Pattern>
                        <InArgument x:TypeArguments="x:String">
                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">Regex[1].ToString()</mca:CSharpValue>
                        </InArgument>
                      </ui:Matches.Pattern>
                      <ui:Matches.Result>
                        <OutArgument x:TypeArguments="scg1:IEnumerable(str:Match)">
                          <mca:CSharpReference x:TypeArguments="scg1:IEnumerable(str:Match)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">regexOutput</mca:CSharpReference>
                        </OutArgument>
                      </ui:Matches.Result>
                    </ui:Matches>
                    <If sap:VirtualizedContainerService.HintSize="833,902" sap2010:WorkflowViewState.IdRef="If_1">
                      <If.Condition>
                        <InArgument x:TypeArguments="x:Boolean">
                          <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_40">regexOutput.Count() != 0</mca:CSharpValue>
                        </InArgument>
                      </If.Condition>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg1:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="526,752" sap2010:WorkflowViewState.IdRef="Sequence_5">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg1:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                            <Assign.To>
                              <OutArgument x:TypeArguments="s:String[]">
                                <mca:CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_15">splitString</mca:CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="s:String[]">
                                <mca:CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_32">regexOutput.First().ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None);</mca:CSharpValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Double">
                                <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_28">Dictionary[regexTable.Rows[index].ItemArray[0].ToString()]</mca:CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Double">
                                <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_63">Dictionary[regexTable.Rows[index].ItemArray[0].ToString()]+Double.Parse(splitString.Last().ToString())</mca:CSharpValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                          <If sap:VirtualizedContainerService.HintSize="484,210" sap2010:WorkflowViewState.IdRef="If_6">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_83">fileIndex == 0 &amp;&amp; index == 2</mca:CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Double">
                                    <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_37">lowestBalance</mca:CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Double">
                                    <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_84">Double.Parse(splitString.Last().ToString())</mca:CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                            </If.Then>
                          </If>
                          <If sap:VirtualizedContainerService.HintSize="484,210" sap2010:WorkflowViewState.IdRef="If_7">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_128">Double.Parse(splitString.Last().ToString()) &lt; lowestBalance</mca:CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Double">
                                    <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_38">lowestBalance</mca:CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Double">
                                    <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_86">Double.Parse(splitString.Last().ToString())</mca:CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                            </If.Then>
                          </If>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">
                              <mca:CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_19">Type2</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEachRow.Body>
              <ui:ForEachRow.CurrentIndex>
                <OutArgument x:TypeArguments="x:Int32">
                  <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_10">index</mca:CSharpReference>
                </OutArgument>
              </ui:ForEachRow.CurrentIndex>
              <ui:ForEachRow.DataTable>
                <InArgument x:TypeArguments="sd:DataTable">
                  <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1">regexTable</mca:CSharpValue>
                </InArgument>
              </ui:ForEachRow.DataTable>
              <sap:WorkflowViewStateService.ViewState>
                <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg1:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEachRow>
            <If sap:VirtualizedContainerService.HintSize="562,237" sap2010:WorkflowViewState.IdRef="If_3">
              <If.Condition>
                <InArgument x:TypeArguments="x:Boolean">
                  <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_46">Type2 == true</mca:CSharpValue>
                </InArgument>
              </If.Condition>
              <If.Then>
                <ui:ForEachRow DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Regex" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1446,1593" sap2010:WorkflowViewState.IdRef="Sequence_8">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="s:String[]" Name="splitString" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg1:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:Matches sap:VirtualizedContainerService.HintSize="1404,59" sap2010:WorkflowViewState.IdRef="Matches_3" IsBuilderTabModified="False" RegexOption="None">
                          <ui:Matches.Input>
                            <InArgument x:TypeArguments="x:String">
                              <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_49">extractedBankStatement</mca:CSharpValue>
                            </InArgument>
                          </ui:Matches.Input>
                          <ui:Matches.Pattern>
                            <InArgument x:TypeArguments="x:String">
                              <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_48">Regex[1].ToString()</mca:CSharpValue>
                            </InArgument>
                          </ui:Matches.Pattern>
                          <ui:Matches.Result>
                            <OutArgument x:TypeArguments="scg1:IEnumerable(str:Match)">
                              <mca:CSharpReference x:TypeArguments="scg1:IEnumerable(str:Match)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_20">regexOutput</mca:CSharpReference>
                            </OutArgument>
                          </ui:Matches.Result>
                        </ui:Matches>
                        <If DisplayName="Private: If" sap:VirtualizedContainerService.HintSize="1404,1302" sap2010:WorkflowViewState.IdRef="If_12">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_110">regexOutput.Count() != 0</mca:CSharpValue>
                            </InArgument>
                          </If.Condition>
                          <If.Then>
                            <If sap:VirtualizedContainerService.HintSize="1097,1152" sap2010:WorkflowViewState.IdRef="If_4">
                              <If.Condition>
                                <InArgument x:TypeArguments="x:Boolean">
                                  <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_71">index != 2</mca:CSharpValue>
                                </InArgument>
                              </If.Condition>
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="526,502" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg1:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">
                                        <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_57">line</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_104">regexOutput.First().ToString()</mca:CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <If sap:VirtualizedContainerService.HintSize="484,210" sap2010:WorkflowViewState.IdRef="If_11">
                                    <If.Condition>
                                      <InArgument x:TypeArguments="x:Boolean">
                                        <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_105">line.Substring(0,1).Equals("$")</mca:CSharpValue>
                                      </InArgument>
                                    </If.Condition>
                                    <If.Then>
                                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">
                                            <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_58">line</mca:CSharpReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">
                                            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_106">line.Substring(1)</mca:CSharpValue>
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Then>
                                  </If>
                                  <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Double">
                                        <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_29">Dictionary[regexTable.Rows[index].ItemArray[0].ToString()]</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Double">
                                        <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_108">Dictionary[regexTable.Rows[index].ItemArray[0].ToString()]+Double.Parse(line)</mca:CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="526,1002" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg1:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">
                                        <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_59">line</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_96">regexOutput.Last().ToString()</mca:CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <If sap:VirtualizedContainerService.HintSize="484,210" sap2010:WorkflowViewState.IdRef="If_10">
                                    <If.Condition>
                                      <InArgument x:TypeArguments="x:Boolean">
                                        <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_97">line.Split(' ').Last().ToString().Substring(0,1).Equals("$")</mca:CSharpValue>
                                      </InArgument>
                                    </If.Condition>
                                    <If.Then>
                                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">
                                            <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_60">line</mca:CSharpReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">
                                            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_98">line.Split(' ').Last().ToString().Substring(1)</mca:CSharpValue>
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Then>
                                  </If>
                                  <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Double">
                                        <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_42">Dictionary[regexTable.Rows[index].ItemArray[0].ToString()]</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Double">
                                        <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_100">Dictionary[regexTable.Rows[index].ItemArray[0].ToString()]+Double.Parse(line.Split(' ').Last().ToString())</mca:CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <If sap:VirtualizedContainerService.HintSize="484,210" sap2010:WorkflowViewState.IdRef="If_18">
                                    <If.Condition>
                                      <InArgument x:TypeArguments="x:Boolean">
                                        <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_132">fileIndex == 0</mca:CSharpValue>
                                      </InArgument>
                                    </If.Condition>
                                    <If.Then>
                                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Double">
                                            <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_62">lowestBalance</mca:CSharpReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Double">
                                            <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_133">Double.Parse(line.Split(' ').Last().ToString())</mca:CSharpValue>
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Then>
                                  </If>
                                  <If sap:VirtualizedContainerService.HintSize="484,210" sap2010:WorkflowViewState.IdRef="If_5">
                                    <If.Condition>
                                      <InArgument x:TypeArguments="x:Boolean">
                                        <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_129" xml:space="preserve">Double.Parse(line.Split(' ').Last().ToString()) &lt;  lowestBalance</mca:CSharpValue>
                                      </InArgument>
                                    </If.Condition>
                                    <If.Then>
                                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Double">
                                            <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_35">lowestBalance</mca:CSharpReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Double">
                                            <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_81">Double.Parse(line.Split(' ').Last().ToString())</mca:CSharpValue>
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Then>
                                  </If>
                                </Sequence>
                              </If.Else>
                            </If>
                          </If.Then>
                          <If.Else>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Boolean">
                                  <mca:CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_46">Type3</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Else>
                        </If>
                        <Assign sap:VirtualizedContainerService.HintSize="1404,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">
                              <mca:CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_21">Type2</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                  <ui:ForEachRow.CurrentIndex>
                    <OutArgument x:TypeArguments="x:Int32">
                      <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_22">index</mca:CSharpReference>
                    </OutArgument>
                  </ui:ForEachRow.CurrentIndex>
                  <ui:ForEachRow.DataTable>
                    <InArgument x:TypeArguments="sd:DataTable">
                      <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_47">regexTable2</mca:CSharpValue>
                    </InArgument>
                  </ui:ForEachRow.DataTable>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg1:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEachRow>
              </If.Then>
            </If>
            <If sap:VirtualizedContainerService.HintSize="562,237" sap2010:WorkflowViewState.IdRef="If_13">
              <If.Condition>
                <InArgument x:TypeArguments="x:Boolean">
                  <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_111">Type3 == true</mca:CSharpValue>
                </InArgument>
              </If.Condition>
              <sap:WorkflowViewStateService.ViewState>
                <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg1:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <ui:ForEachRow DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ForEachRow_5">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Regex" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1062,1343" sap2010:WorkflowViewState.IdRef="Sequence_14">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg1:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:Matches sap:VirtualizedContainerService.HintSize="1020,59" sap2010:WorkflowViewState.IdRef="Matches_4" IsBuilderTabModified="False" RegexOption="None">
                          <ui:Matches.Input>
                            <InArgument x:TypeArguments="x:String">
                              <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_114">extractedBankStatement</mca:CSharpValue>
                            </InArgument>
                          </ui:Matches.Input>
                          <ui:Matches.Pattern>
                            <InArgument x:TypeArguments="x:String">
                              <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_113">Regex[1].ToString()</mca:CSharpValue>
                            </InArgument>
                          </ui:Matches.Pattern>
                          <ui:Matches.Result>
                            <OutArgument x:TypeArguments="scg1:IEnumerable(str:Match)">
                              <mca:CSharpReference x:TypeArguments="scg1:IEnumerable(str:Match)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_48">regexOutput</mca:CSharpReference>
                            </OutArgument>
                          </ui:Matches.Result>
                        </ui:Matches>
                        <If sap:VirtualizedContainerService.HintSize="1020,1052" sap2010:WorkflowViewState.IdRef="If_20">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_136">regexOutput.Count() != 0</mca:CSharpValue>
                            </InArgument>
                          </If.Condition>
                          <If.Then>
                            <If sap:VirtualizedContainerService.HintSize="875,902" sap2010:WorkflowViewState.IdRef="If_17">
                              <If.Condition>
                                <InArgument x:TypeArguments="x:Boolean">
                                  <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_115">index != 2</mca:CSharpValue>
                                </InArgument>
                              </If.Condition>
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg1:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Double">
                                        <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_51">Dictionary[regexTable.Rows[index].ItemArray[0].ToString()]</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Double">
                                        <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_126">Dictionary[regexTable.Rows[index].ItemArray[0].ToString()]+Double.Parse(regexOutput.First().ToString())</mca:CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="526,752" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg1:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">
                                        <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_61">line</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_120">regexOutput.Last().ToString()</mca:CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Double">
                                        <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_54">Dictionary[regexTable.Rows[index].ItemArray[0].ToString()]</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Double">
                                        <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_123">Dictionary[regexTable.Rows[index].ItemArray[0].ToString()]+Double.Parse(line.Split(' ').Last().ToString())</mca:CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <If sap:VirtualizedContainerService.HintSize="484,210" sap2010:WorkflowViewState.IdRef="If_19">
                                    <If.Condition>
                                      <InArgument x:TypeArguments="x:Boolean">
                                        <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_134">fileIndex == 0</mca:CSharpValue>
                                      </InArgument>
                                    </If.Condition>
                                    <If.Then>
                                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Double">
                                            <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_63">lowestBalance</mca:CSharpReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Double">
                                            <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_135">Double.Parse(line.Split(' ').Last().ToString())</mca:CSharpValue>
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Then>
                                  </If>
                                  <If sap:VirtualizedContainerService.HintSize="484,210" sap2010:WorkflowViewState.IdRef="If_16">
                                    <If.Condition>
                                      <InArgument x:TypeArguments="x:Boolean">
                                        <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_130">Double.Parse(line.Split(' ').Last().ToString()) &lt; lowestBalance</mca:CSharpValue>
                                      </InArgument>
                                    </If.Condition>
                                    <If.Then>
                                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Double">
                                            <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_55">lowestBalance</mca:CSharpReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Double">
                                            <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_125">Double.Parse(line.Split(' ').Last().ToString())</mca:CSharpValue>
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Then>
                                  </If>
                                </Sequence>
                              </If.Else>
                            </If>
                          </If.Then>
                        </If>
                        <Assign sap:VirtualizedContainerService.HintSize="1020,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">
                              <mca:CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_64">Type3</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                  <ui:ForEachRow.CurrentIndex>
                    <OutArgument x:TypeArguments="x:Int32">
                      <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_56">index</mca:CSharpReference>
                    </OutArgument>
                  </ui:ForEachRow.CurrentIndex>
                  <ui:ForEachRow.DataTable>
                    <InArgument x:TypeArguments="sd:DataTable">
                      <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_112">regexTable3</mca:CSharpValue>
                    </InArgument>
                  </ui:ForEachRow.DataTable>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg1:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEachRow>
              </If.Then>
            </If>
            <p:ReadFullPDF DisplayName="Read full PDF" sap:VirtualizedContainerService.HintSize="562,79" sap2010:WorkflowViewState.IdRef="ReadFullPDF_1">
              <p:ReadFullPDF.PDF_FilePath>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_153">file.ToString()</mca:CSharpValue>
                </InArgument>
              </p:ReadFullPDF.PDF_FilePath>
              <p:ReadFullPDF.PDF_Text>
                <OutArgument x:TypeArguments="x:String">
                  <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_71">extractedBankStatement</mca:CSharpReference>
                </OutArgument>
              </p:ReadFullPDF.PDF_Text>
            </p:ReadFullPDF>
            <ui:Matches sap:VirtualizedContainerService.HintSize="562,59" sap2010:WorkflowViewState.IdRef="Matches_6" IsBuilderTabModified="False" Pattern="(\d{2}[/]\d{2}[/]\d{4}\s\d{2}[/]\d{2}[/]\d{4})" RegexOption="IgnoreCase, Compiled">
              <ui:Matches.Input>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_154">extractedBankStatement</mca:CSharpValue>
                </InArgument>
              </ui:Matches.Input>
              <ui:Matches.Result>
                <OutArgument x:TypeArguments="scg1:IEnumerable(str:Match)">
                  <mca:CSharpReference x:TypeArguments="scg1:IEnumerable(str:Match)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_72">transactions</mca:CSharpReference>
                </OutArgument>
              </ui:Matches.Result>
            </ui:Matches>
            <Assign sap:VirtualizedContainerService.HintSize="562,60" sap2010:WorkflowViewState.IdRef="Assign_32">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">
                  <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_73">TotalTransactions</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">
                  <mca:CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_155">TotalTransactions + transactions.Count()</mca:CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
            <ui:Matches sap:VirtualizedContainerService.HintSize="562,59" sap2010:WorkflowViewState.IdRef="Matches_7" IsBuilderTabModified="False" Pattern="(?&lt;=(\d{2}[/]\d{2}[/]\d{4}\s\d{2}[/]\d{2}[/]\d{4}))[\w\W]*?(?=(\d{2}[/]\d{2}[/]\d{4}\s\d{2}[/]\d{2}[/]\d{4}))" RegexOption="IgnoreCase, Compiled">
              <ui:Matches.Input>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_160">extractedBankStatement</mca:CSharpValue>
                </InArgument>
              </ui:Matches.Input>
              <ui:Matches.Result>
                <OutArgument x:TypeArguments="scg1:IEnumerable(str:Match)">
                  <mca:CSharpReference x:TypeArguments="scg1:IEnumerable(str:Match)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_79">regexMatch</mca:CSharpReference>
                </OutArgument>
              </ui:Matches.Result>
            </ui:Matches>
            <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="562,533" sap2010:WorkflowViewState.IdRef="ForEach`1_3">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:Object">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,399" sap2010:WorkflowViewState.IdRef="Sequence_17">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg1:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:Matches sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="Matches_8" IsBuilderTabModified="False" Pattern="(bounced| return|return | rtn|rtn |\s-\d.*\u002E\d{2})" RegexOption="Compiled">
                      <ui:Matches.Input>
                        <InArgument x:TypeArguments="x:String">
                          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_161">item.ToString().ToLower()</mca:CSharpValue>
                        </InArgument>
                      </ui:Matches.Input>
                      <ui:Matches.Result>
                        <OutArgument x:TypeArguments="scg1:IEnumerable(str:Match)">
                          <mca:CSharpReference x:TypeArguments="scg1:IEnumerable(str:Match)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_80">totalInstance</mca:CSharpReference>
                        </OutArgument>
                      </ui:Matches.Result>
                    </ui:Matches>
                    <If sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_26">
                      <If.Condition>
                        <InArgument x:TypeArguments="x:Boolean">
                          <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_166">totalInstance.Count() != 0</mca:CSharpValue>
                        </InArgument>
                      </If.Condition>
                      <If.Then>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_37">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">
                              <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_84">instance</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">
                              <mca:CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_167">instance + 1</mca:CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Then>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
              <ui:ForEach.Values>
                <InArgument x:TypeArguments="sc:IEnumerable">
                  <mca:CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_162">regexMatch</mca:CSharpValue>
                </InArgument>
              </ui:ForEach.Values>
            </ui:ForEach>
            <ui:Matches sap:VirtualizedContainerService.HintSize="562,59" sap2010:WorkflowViewState.IdRef="Matches_9" IsBuilderTabModified="False" Pattern="(?&lt;=(\d{2}[/]\d{2}[/]\d{4}\s\d{2}[/]\d{2}[/]\d{4}))[\w\W]*?(?=(\d\u002E\d{2}\n))" RegexOption="IgnoreCase, Compiled">
              <ui:Matches.Input>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_163">extractedBankStatement</mca:CSharpValue>
                </InArgument>
              </ui:Matches.Input>
              <ui:Matches.Result>
                <OutArgument x:TypeArguments="scg1:IEnumerable(str:Match)">
                  <mca:CSharpReference x:TypeArguments="scg1:IEnumerable(str:Match)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_81">regexMatch</mca:CSharpReference>
                </OutArgument>
              </ui:Matches.Result>
            </ui:Matches>
            <ui:Matches sap:VirtualizedContainerService.HintSize="562,59" sap2010:WorkflowViewState.IdRef="Matches_10" IsBuilderTabModified="False" Pattern="(bounced| return|return | rtn|rtn |\s-\d)" RegexOption="Compiled">
              <ui:Matches.Input>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_164">regexMatch.Last().ToString().ToLower()</mca:CSharpValue>
                </InArgument>
              </ui:Matches.Input>
              <ui:Matches.Result>
                <OutArgument x:TypeArguments="scg1:IEnumerable(str:Match)">
                  <mca:CSharpReference x:TypeArguments="scg1:IEnumerable(str:Match)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_82">totalInstance</mca:CSharpReference>
                </OutArgument>
              </ui:Matches.Result>
            </ui:Matches>
            <If sap:VirtualizedContainerService.HintSize="562,237" sap2010:WorkflowViewState.IdRef="If_27">
              <If.Condition>
                <InArgument x:TypeArguments="x:Boolean">
                  <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_168">totalInstance.Count() != 0</mca:CSharpValue>
                </InArgument>
              </If.Condition>
              <If.Then>
                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_38">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">
                      <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_85">instance</mca:CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">
                      <mca:CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_169">instance + 1</mca:CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <ui:ForEach.CurrentIndex>
        <OutArgument x:TypeArguments="x:Int32">
          <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_36">fileIndex</mca:CSharpReference>
        </OutArgument>
      </ui:ForEach.CurrentIndex>
      <ui:ForEach.Values>
        <InArgument x:TypeArguments="sc:IEnumerable">
          <mca:CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_16">files</mca:CSharpValue>
        </InArgument>
      </ui:ForEach.Values>
      <sap:WorkflowViewStateService.ViewState>
        <scg1:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg1:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <If sap:VirtualizedContainerService.HintSize="640,51" sap2010:WorkflowViewState.IdRef="If_25">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_156">TotalTransactions &lt; 60</mca:CSharpValue>
        </InArgument>
      </If.Condition>
      <sap:WorkflowViewStateService.ViewState>
        <scg1:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg1:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_33">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">
              <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_74">finalTransaction</mca:CSharpReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">0-59</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
      <If.Else>
        <If sap:VirtualizedContainerService.HintSize="569,210" sap2010:WorkflowViewState.IdRef="If_24">
          <If.Condition>
            <InArgument x:TypeArguments="x:Boolean">
              <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_157">TotalTransactions &gt;= 60 &amp;&amp; TotalTransactions &lt; 120</mca:CSharpValue>
            </InArgument>
          </If.Condition>
          <If.Then>
            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_34">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">
                  <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_75">finalTransaction</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">60-119</InArgument>
              </Assign.Value>
            </Assign>
          </If.Then>
          <If.Else>
            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_35">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">
                  <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_76">finalTransaction</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">120 &amp; Above</InArgument>
              </Assign.Value>
            </Assign>
          </If.Else>
        </If>
      </If.Else>
    </If>
    <If sap:VirtualizedContainerService.HintSize="640,51" sap2010:WorkflowViewState.IdRef="If_22">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_140">instance == 0</mca:CSharpValue>
        </InArgument>
      </If.Condition>
      <sap:WorkflowViewStateService.ViewState>
        <scg1:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg1:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_29">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">
              <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_66">finalInstance</mca:CSharpReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">0 Instances</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
      <If.Else>
        <If sap:VirtualizedContainerService.HintSize="569,210" sap2010:WorkflowViewState.IdRef="If_23">
          <If.Condition>
            <InArgument x:TypeArguments="x:Boolean">
              <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_142">instance == 1 || instance == 2</mca:CSharpValue>
            </InArgument>
          </If.Condition>
          <If.Then>
            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_30">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">
                  <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_67">finalInstance</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">1-2 Instances</InArgument>
              </Assign.Value>
            </Assign>
          </If.Then>
          <If.Else>
            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_31">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">
                  <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_70">finalInstance</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">&gt;=3 Instances</InArgument>
              </Assign.Value>
            </Assign>
          </If.Else>
        </If>
      </If.Else>
    </If>
    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="640,248" sap2010:WorkflowViewState.IdRef="ForEach`1_2">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="key" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_10">
            <sap:WorkflowViewStateService.ViewState>
              <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg1:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:AddDataRow DataRow="{x:Null}" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_1">
              <ui:AddDataRow.ArrayRow>
                <InArgument x:TypeArguments="s:Object[]">
                  <mca:CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_93">new string[] {key.ToString(),(Dictionary[key.ToString()]/6).ToString("N2")}</mca:CSharpValue>
                </InArgument>
              </ui:AddDataRow.ArrayRow>
              <ui:AddDataRow.DataTable>
                <InOutArgument x:TypeArguments="sd:DataTable">
                  <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_30">outputTable</mca:CSharpReference>
                </InOutArgument>
              </ui:AddDataRow.DataTable>
            </ui:AddDataRow>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <ui:ForEach.Values>
        <InArgument x:TypeArguments="sc:IEnumerable">
          <mca:CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_67">Dictionary.Keys</mca:CSharpValue>
        </InArgument>
      </ui:ForEach.Values>
    </ui:ForEach>
    <ui:AddDataRow DataRow="{x:Null}" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="640,22" sap2010:WorkflowViewState.IdRef="AddDataRow_2">
      <ui:AddDataRow.ArrayRow>
        <InArgument x:TypeArguments="s:Object[]">
          <mca:CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_146">new string[]{"Lowest Bank Balance (out of 6 months)",lowestBalance.ToString("N2")}</mca:CSharpValue>
        </InArgument>
      </ui:AddDataRow.ArrayRow>
      <ui:AddDataRow.DataTable>
        <InOutArgument x:TypeArguments="sd:DataTable">
          <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_39">outputTable</mca:CSharpReference>
        </InOutArgument>
      </ui:AddDataRow.DataTable>
    </ui:AddDataRow>
    <ui:AddDataRow DataRow="{x:Null}" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="640,22" sap2010:WorkflowViewState.IdRef="AddDataRow_4">
      <ui:AddDataRow.ArrayRow>
        <InArgument x:TypeArguments="s:Object[]">
          <mca:CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_158">new string[]{"Number of Transaction(s) (includes all deposits &amp; withdrawals)", finalTransaction.ToString()}</mca:CSharpValue>
        </InArgument>
      </ui:AddDataRow.ArrayRow>
      <ui:AddDataRow.DataTable>
        <InOutArgument x:TypeArguments="sd:DataTable">
          <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_77">outputTable</mca:CSharpReference>
        </InOutArgument>
      </ui:AddDataRow.DataTable>
    </ui:AddDataRow>
    <ui:AddDataRow DataRow="{x:Null}" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="640,22" sap2010:WorkflowViewState.IdRef="AddDataRow_3">
      <ui:AddDataRow.ArrayRow>
        <InArgument x:TypeArguments="s:Object[]">
          <mca:CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_150">new string[] {"Instances of Outward Returned Cheque(s) / Giro(s) / Negative Balance(s) (over 6 months)", finalInstance.ToString()}</mca:CSharpValue>
        </InArgument>
      </ui:AddDataRow.ArrayRow>
      <ui:AddDataRow.DataTable>
        <InOutArgument x:TypeArguments="sd:DataTable">
          <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_68">outputTable</mca:CSharpReference>
        </InOutArgument>
      </ui:AddDataRow.DataTable>
    </ui:AddDataRow>
    <ui:WriteRange AddHeaders="True" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="640,115" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="Sheet1" StartingCell="A1" WorkbookPath="Excel output files/Bank Statement Output.xlsx">
      <ui:WriteRange.DataTable>
        <InArgument x:TypeArguments="sd:DataTable">
          <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">outputTable</mca:CSharpValue>
        </InArgument>
      </ui:WriteRange.DataTable>
    </ui:WriteRange>
  </Sequence>
</Activity>