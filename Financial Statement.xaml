<Activity mc:Ignorable="sap sap2010" x:Class="Financial_Statement" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System" xmlns:scg1="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:sd1="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="FinancialStatementPath" Type="InArgument(x:String)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>689,2839</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.Core.Activities.OCR.Engines</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Financial_Statement" sap:VirtualizedContainerService.HintSize="563,2674" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="FinancialData" />
      <Variable x:TypeArguments="scg1:IEnumerable(scg1:KeyValuePair(sd1:Rectangle, x:String))" Name="fin" />
      <Variable x:TypeArguments="x:String" Name="extractedBankStatement" />
      <Variable x:TypeArguments="sd:DataTable" Name="RegexTable" />
      <Variable x:TypeArguments="sd:DataTable" Name="outputTable" />
      <Variable x:TypeArguments="scg:SortedDictionary(x:String, x:Double)" Name="Dictionary" />
      <Variable x:TypeArguments="x:Int32" Name="index" />
      <Variable x:TypeArguments="x:String" Name="ValueSplit" />
      <Variable x:TypeArguments="x:String" Name="finalOutput" />
      <Variable x:TypeArguments="scg1:IEnumerable(str:Match)" Name="IsJascorp" />
      <Variable x:TypeArguments="scg1:IEnumerable(str:Match)" Name="regexOutput" />
      <Variable x:TypeArguments="scg1:IEnumerable(str:Match)" Name="IsMaryChia" />
      <Variable x:TypeArguments="scg1:IEnumerable(str:Match)" Name="IsVRV" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg1:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg1:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:BuildDataTable DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="521,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Field&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Value&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Field&gt;Net Profit&lt;/Field&gt;&#xA;    &lt;Value&gt;(?&amp;lt;=(income|loss|Profit|Loss|profit|Income)\sfor\sthe\syear\s).*(?=\s.*\s\s)&lt;/Value&gt;&#xA;  &lt;/TableName&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Field&gt;Current Assets&lt;/Field&gt;&#xA;    &lt;Value&gt;(?&amp;lt;=(Total\scurrent\sassets\s|Total\sCurrent\sAssets\s)).*?(?=\n)&lt;/Value&gt;&#xA;  &lt;/TableName&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Field&gt;Current Liabilities&lt;/Field&gt;&#xA;    &lt;Value&gt;(?&amp;lt;=Total\s(current|Current)\s(liabilities|liability|Liabilities)\s).*?(?=\n)&lt;/Value&gt;&#xA;  &lt;/TableName&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Field&gt;Non-Current Liabilities&lt;/Field&gt;&#xA;    &lt;Value&gt;(?&amp;lt;=(Total\snon-current\sliabilities\s|Total\sNon-Current\sLiabilities\s)).*?(?=\n)&lt;/Value&gt;&#xA;  &lt;/TableName&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Field&gt;Capital&lt;/Field&gt;&#xA;    &lt;Value&gt;(?&amp;lt;=(Total|Net)\s(equity|Equity)\s).*?(?=\n)&lt;/Value&gt;&#xA;  &lt;/TableName&gt;&#xA;&lt;/NewDataSet&gt;">
      <ui:BuildDataTable.DataTable>
        <OutArgument x:TypeArguments="sd:DataTable">
          <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_5">RegexTable</mca:CSharpReference>
        </OutArgument>
      </ui:BuildDataTable.DataTable>
    </ui:BuildDataTable>
    <ui:BuildDataTable DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="521,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_2" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Field&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Value&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;">
      <ui:BuildDataTable.DataTable>
        <OutArgument x:TypeArguments="sd:DataTable">
          <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_6">outputTable</mca:CSharpReference>
        </OutArgument>
      </ui:BuildDataTable.DataTable>
    </ui:BuildDataTable>
    <Assign sap:VirtualizedContainerService.HintSize="521,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:SortedDictionary(x:String, x:Double)">
          <mca:CSharpReference x:TypeArguments="scg:SortedDictionary(x:String, x:Double)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_8">Dictionary</mca:CSharpReference>
        </OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:SortedDictionary(x:String, x:Double)">
          <mca:CSharpValue x:TypeArguments="scg:SortedDictionary(x:String, x:Double)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">new SortedDictionary&lt;string,double&gt;()</mca:CSharpValue>
        </InArgument>
      </Assign.Value>
    </Assign>
    <ui:ReadPDFText PreserveFormatting="{x:Null}" DisplayName="Read PDF Text" sap:VirtualizedContainerService.HintSize="521,59" sap2010:WorkflowViewState.IdRef="ReadPDFText_1" Range="All">
      <ui:ReadPDFText.FileName>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_213">FinancialStatementPath</mca:CSharpValue>
        </InArgument>
      </ui:ReadPDFText.FileName>
      <ui:ReadPDFText.Text>
        <OutArgument x:TypeArguments="x:String">
          <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_4">extractedBankStatement</mca:CSharpReference>
        </OutArgument>
      </ui:ReadPDFText.Text>
    </ui:ReadPDFText>
    <ui:Matches sap:VirtualizedContainerService.HintSize="521,59" sap2010:WorkflowViewState.IdRef="Matches_11" IsBuilderTabModified="False" Pattern="(JASCORP\sENTERPRISE\sPTE.\sLTD.)" RegexOption="IgnoreCase, Compiled">
      <ui:Matches.Input>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_161">extractedBankStatement</mca:CSharpValue>
        </InArgument>
      </ui:Matches.Input>
      <ui:Matches.Result>
        <OutArgument x:TypeArguments="scg1:IEnumerable(str:Match)">
          <mca:CSharpReference x:TypeArguments="scg1:IEnumerable(str:Match)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_65">IsJascorp</mca:CSharpReference>
        </OutArgument>
      </ui:Matches.Result>
    </ui:Matches>
    <ui:Matches sap:VirtualizedContainerService.HintSize="521,59" sap2010:WorkflowViewState.IdRef="Matches_17" IsBuilderTabModified="False" Pattern="(Mary\sChia\sHoldings\sLimited)" RegexOption="IgnoreCase, Compiled">
      <ui:Matches.Input>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_219">extractedBankStatement</mca:CSharpValue>
        </InArgument>
      </ui:Matches.Input>
      <ui:Matches.Result>
        <OutArgument x:TypeArguments="scg1:IEnumerable(str:Match)">
          <mca:CSharpReference x:TypeArguments="scg1:IEnumerable(str:Match)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_97">IsMaryChia</mca:CSharpReference>
        </OutArgument>
      </ui:Matches.Result>
    </ui:Matches>
    <ui:Matches sap:VirtualizedContainerService.HintSize="521,59" sap2010:WorkflowViewState.IdRef="Matches_19" IsBuilderTabModified="False" Pattern="(VRV\sGLOBAL\sPTE\sLTD)" RegexOption="IgnoreCase, Compiled">
      <ui:Matches.Input>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_246">extractedBankStatement</mca:CSharpValue>
        </InArgument>
      </ui:Matches.Input>
      <ui:Matches.Result>
        <OutArgument x:TypeArguments="scg1:IEnumerable(str:Match)">
          <mca:CSharpReference x:TypeArguments="scg1:IEnumerable(str:Match)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_112">IsVRV</mca:CSharpReference>
        </OutArgument>
      </ui:Matches.Result>
    </ui:Matches>
    <If sap:VirtualizedContainerService.HintSize="521,493" sap2010:WorkflowViewState.IdRef="If_46">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_247">IsVRV.Count() != 0</mca:CSharpValue>
        </InArgument>
      </If.Condition>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="376,343" sap2010:WorkflowViewState.IdRef="Sequence_52">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:Double" Name="TotalAssets" />
            <Variable x:TypeArguments="x:Double" Name="NonCurrentAssets" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg1:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg1:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:BuildDataTable DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_8" TableInfo="&lt;NewDataSet&gt;&#xD;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xD;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xD;&#xA;      &lt;xs:complexType&gt;&#xD;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xD;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xD;&#xA;            &lt;xs:complexType&gt;&#xD;&#xA;              &lt;xs:sequence&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Field&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xD;&#xA;                  &lt;xs:simpleType&gt;&#xD;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xD;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xD;&#xA;                    &lt;/xs:restriction&gt;&#xD;&#xA;                  &lt;/xs:simpleType&gt;&#xD;&#xA;                &lt;/xs:element&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Value&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xD;&#xA;                  &lt;xs:simpleType&gt;&#xD;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xD;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xD;&#xA;                    &lt;/xs:restriction&gt;&#xD;&#xA;                  &lt;/xs:simpleType&gt;&#xD;&#xA;                &lt;/xs:element&gt;&#xD;&#xA;              &lt;/xs:sequence&gt;&#xD;&#xA;            &lt;/xs:complexType&gt;&#xD;&#xA;          &lt;/xs:element&gt;&#xD;&#xA;        &lt;/xs:choice&gt;&#xD;&#xA;      &lt;/xs:complexType&gt;&#xD;&#xA;    &lt;/xs:element&gt;&#xD;&#xA;  &lt;/xs:schema&gt;&#xD;&#xA;  &lt;TableName&gt;&#xD;&#xA;    &lt;Field&gt;Net Profit&lt;/Field&gt;&#xD;&#xA;    &lt;Value&gt;(?&amp;lt;=GROSS\sPROFIT\s).*?(?=\n)&lt;/Value&gt;&#xD;&#xA;  &lt;/TableName&gt;&#xD;&#xA;  &lt;TableName&gt;&#xD;&#xA;    &lt;Field&gt;Current Liabilities&lt;/Field&gt;&#xD;&#xA;    &lt;Value&gt;(?&amp;lt;=Total\sLiabilities\s).*?(?=\s)&lt;/Value&gt;&#xD;&#xA;  &lt;/TableName&gt;&#xD;&#xA;  &lt;TableName&gt;&#xD;&#xA;    &lt;Field&gt;Capital&lt;/Field&gt;&#xD;&#xA;    &lt;Value&gt;(?&amp;lt;=Total\sequity\sand\sreserves\s).*?(?=\s)&lt;/Value&gt;&#xD;&#xA;  &lt;/TableName&gt;&#xD;&#xA;  &lt;TableName&gt;&#xD;&#xA;    &lt;Field&gt;Total Assets&lt;/Field&gt;&#xD;&#xA;    &lt;Value&gt;(?&amp;lt;=Total\sAssets\s).*?(?=\n)&lt;/Value&gt;&#xD;&#xA;  &lt;/TableName&gt;&#xD;&#xA;  &lt;TableName&gt;&#xD;&#xA;    &lt;Field&gt;Non-Current Assets&lt;/Field&gt;&#xD;&#xA;    &lt;Value&gt;(?&amp;lt;=Non-current\sassets\s)[\w\W]*?(?=\s\s\s\sCurrent\sAssets)&lt;/Value&gt;&#xD;&#xA;  &lt;/TableName&gt;&#xD;&#xA;&lt;/NewDataSet&gt;">
            <ui:BuildDataTable.DataTable>
              <OutArgument x:TypeArguments="sd:DataTable">
                <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_113">RegexTable</mca:CSharpReference>
              </OutArgument>
            </ui:BuildDataTable.DataTable>
          </ui:BuildDataTable>
          <ui:ForEachRow DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="ForEachRow_4">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="840,2067" sap2010:WorkflowViewState.IdRef="Sequence_51">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg1:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:Matches sap:VirtualizedContainerService.HintSize="798,59" sap2010:WorkflowViewState.IdRef="Matches_20" IsBuilderTabModified="False" RegexOption="IgnoreCase, Compiled">
                    <ui:Matches.Input>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_268">extractedBankStatement</mca:CSharpValue>
                      </InArgument>
                    </ui:Matches.Input>
                    <ui:Matches.Pattern>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_267">row[1].ToString()</mca:CSharpValue>
                      </InArgument>
                    </ui:Matches.Pattern>
                    <ui:Matches.Result>
                      <OutArgument x:TypeArguments="scg1:IEnumerable(str:Match)">
                        <mca:CSharpReference x:TypeArguments="scg1:IEnumerable(str:Match)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_126">regexOutput</mca:CSharpReference>
                      </OutArgument>
                    </ui:Matches.Result>
                  </ui:Matches>
                  <If sap:VirtualizedContainerService.HintSize="798,360" sap2010:WorkflowViewState.IdRef="If_49">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_250">index == 0</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <If sap:VirtualizedContainerService.HintSize="484,210" sap2010:WorkflowViewState.IdRef="If_48">
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_251">regexOutput.First().ToString().Contains("(") || regexOutput.First().ToString().Contains(")")</mca:CSharpValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <ui:AddDataRow DataRow="{x:Null}" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_24">
                            <ui:AddDataRow.ArrayRow>
                              <InArgument x:TypeArguments="s:Object[]">
                                <mca:CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_252">new String[]{"Profitable in latest Financial Statement (Latest Full Year)", "No"}</mca:CSharpValue>
                              </InArgument>
                            </ui:AddDataRow.ArrayRow>
                            <ui:AddDataRow.DataTable>
                              <InOutArgument x:TypeArguments="sd:DataTable">
                                <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_114">outputTable</mca:CSharpReference>
                              </InOutArgument>
                            </ui:AddDataRow.DataTable>
                          </ui:AddDataRow>
                        </If.Then>
                        <If.Else>
                          <ui:AddDataRow DataRow="{x:Null}" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_25">
                            <ui:AddDataRow.ArrayRow>
                              <InArgument x:TypeArguments="s:Object[]">
                                <mca:CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_253">new String[]{"Profitable in latest Financial Statement (Latest Full Year)", "Yes"}</mca:CSharpValue>
                              </InArgument>
                            </ui:AddDataRow.ArrayRow>
                            <ui:AddDataRow.DataTable>
                              <InOutArgument x:TypeArguments="sd:DataTable">
                                <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_115">outputTable</mca:CSharpReference>
                              </InOutArgument>
                            </ui:AddDataRow.DataTable>
                          </ui:AddDataRow>
                        </If.Else>
                      </If>
                    </If.Then>
                  </If>
                  <If sap:VirtualizedContainerService.HintSize="798,402" sap2010:WorkflowViewState.IdRef="If_52">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_260">index == 1</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_53">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg1:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_57">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Double">
                              <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_121">Dictionary["Current Liabilities"]</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Double">
                              <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_261">Convert.ToDouble(regexOutput.First().ToString().Replace(",",""))</mca:CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_58">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Double">
                              <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_122">Dictionary["Non-Current Liabilities"]</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Double">0</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Then>
                  </If>
                  <If sap:VirtualizedContainerService.HintSize="798,514" sap2010:WorkflowViewState.IdRef="If_51">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_254">index == 2</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <If sap:VirtualizedContainerService.HintSize="653,364" sap2010:WorkflowViewState.IdRef="If_50">
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_255">regexOutput.First().ToString().Contains("(") || regexOutput.First().ToString().Contains(")")</mca:CSharpValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_49">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg1:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:AddDataRow DataRow="{x:Null}" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="AddDataRow_26">
                              <ui:AddDataRow.ArrayRow>
                                <InArgument x:TypeArguments="s:Object[]">
                                  <mca:CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_256">new String[] {"Total Net Worth (Total Equity)", "Negative"}</mca:CSharpValue>
                                </InArgument>
                              </ui:AddDataRow.ArrayRow>
                              <ui:AddDataRow.DataTable>
                                <InOutArgument x:TypeArguments="sd:DataTable">
                                  <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_116">outputTable</mca:CSharpReference>
                                </InOutArgument>
                              </ui:AddDataRow.DataTable>
                            </ui:AddDataRow>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_55">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Double">
                                  <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_117">Dictionary["Capital"]</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Double">
                                  <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_257">Convert.ToDouble(regexOutput.First().ToString().Replace(",","").Replace("(","").Replace(")","").Replace("VRV",""))</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_50">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg1:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:AddDataRow DataRow="{x:Null}" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="AddDataRow_27">
                              <ui:AddDataRow.ArrayRow>
                                <InArgument x:TypeArguments="s:Object[]">
                                  <mca:CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_258">new String[] {"Total Net Worth (Total Equity)", "Positive"}</mca:CSharpValue>
                                </InArgument>
                              </ui:AddDataRow.ArrayRow>
                              <ui:AddDataRow.DataTable>
                                <InOutArgument x:TypeArguments="sd:DataTable">
                                  <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_118">outputTable</mca:CSharpReference>
                                </InOutArgument>
                              </ui:AddDataRow.DataTable>
                            </ui:AddDataRow>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_56">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Double">
                                  <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_119">Dictionary["Capital"]</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Double">
                                  <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_259">Convert.ToDouble(regexOutput.First().ToString().Replace(",","").Replace("VRV",""))</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Else>
                      </If>
                    </If.Then>
                  </If>
                  <If sap:VirtualizedContainerService.HintSize="798,210" sap2010:WorkflowViewState.IdRef="If_53">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_262">index == 3</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_59">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Double">
                            <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_128">TotalAssets</mca:CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Double">
                            <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_263">Convert.ToDouble(regexOutput.First().ToString().Replace(",",""))</mca:CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Then>
                  </If>
                  <If sap:VirtualizedContainerService.HintSize="798,230" sap2010:WorkflowViewState.IdRef="If_54">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_264">index == 4</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_62">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Double">
                            <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_129">NonCurrentAssets</mca:CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Double">
                            <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_271">Convert.ToDouble(regexOutput.First().ToString().Split(' ').Last().Replace(",",""))</mca:CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Then>
                  </If>
                </Sequence>
              </ActivityAction>
            </ui:ForEachRow.Body>
            <ui:ForEachRow.CurrentIndex>
              <OutArgument x:TypeArguments="x:Int32">
                <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_120">index</mca:CSharpReference>
              </OutArgument>
            </ui:ForEachRow.CurrentIndex>
            <ui:ForEachRow.DataTable>
              <InArgument x:TypeArguments="sd:DataTable">
                <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_249">RegexTable</mca:CSharpValue>
              </InArgument>
            </ui:ForEachRow.DataTable>
            <sap:WorkflowViewStateService.ViewState>
              <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg1:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEachRow>
          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_61">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Double">
                <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_125">Dictionary["Current Assets"]</mca:CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Double">
                <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_266">TotalAssets - NonCurrentAssets</mca:CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
    </If>
    <If sap:VirtualizedContainerService.HintSize="521,393" sap2010:WorkflowViewState.IdRef="If_38">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_221">IsMaryChia.Count() != 0</mca:CSharpValue>
        </InArgument>
      </If.Condition>
      <sap:WorkflowViewStateService.ViewState>
        <scg1:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg1:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="376,243" sap2010:WorkflowViewState.IdRef="Sequence_44">
          <sap:WorkflowViewStateService.ViewState>
            <scg1:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg1:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:BuildDataTable DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_6" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Field&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Value&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Field&gt;Net Profit&lt;/Field&gt;&#xA;    &lt;Value&gt;(?&amp;lt;=Total\scomprehensive\sloss\sfor\sthe\syear\s\s).*?(?=\s)&lt;/Value&gt;&#xA;  &lt;/TableName&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Field&gt;Current Assets&lt;/Field&gt;&#xA;    &lt;Value&gt;((.*\n){1})(?=Total\sassets)&lt;/Value&gt;&#xA;  &lt;/TableName&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Field&gt;Current Liabilities&lt;/Field&gt;&#xA;    &lt;Value&gt;((.*\n){1})(?=Total Liabilities)&lt;/Value&gt;&#xA;  &lt;/TableName&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Field&gt;Non-Current Liabilities&lt;/Field&gt;&#xA;    &lt;Value&gt;((.*\n){1})(?=\s\sCurrent Liabilities)&lt;/Value&gt;&#xA;  &lt;/TableName&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Field&gt;Capital&lt;/Field&gt;&#xA;    &lt;Value&gt;(?&amp;lt;=Total\sequity\s\s).*?(?=\s)&lt;/Value&gt;&#xA;  &lt;/TableName&gt;&#xA;&lt;/NewDataSet&gt;">
            <ui:BuildDataTable.DataTable>
              <OutArgument x:TypeArguments="sd:DataTable">
                <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_98">RegexTable</mca:CSharpReference>
              </OutArgument>
            </ui:BuildDataTable.DataTable>
          </ui:BuildDataTable>
          <ui:ForEachRow DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="840,1355" sap2010:WorkflowViewState.IdRef="Sequence_43">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg1:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:Matches sap:VirtualizedContainerService.HintSize="798,59" sap2010:WorkflowViewState.IdRef="Matches_18" IsBuilderTabModified="False" RegexOption="IgnoreCase, Compiled">
                    <ui:Matches.Input>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_224">extractedBankStatement</mca:CSharpValue>
                      </InArgument>
                    </ui:Matches.Input>
                    <ui:Matches.Pattern>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_223">row[1].ToString()</mca:CSharpValue>
                      </InArgument>
                    </ui:Matches.Pattern>
                    <ui:Matches.Result>
                      <OutArgument x:TypeArguments="scg1:IEnumerable(str:Match)">
                        <mca:CSharpReference x:TypeArguments="scg1:IEnumerable(str:Match)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_99">regexOutput</mca:CSharpReference>
                      </OutArgument>
                    </ui:Matches.Result>
                  </ui:Matches>
                  <If sap:VirtualizedContainerService.HintSize="798,360" sap2010:WorkflowViewState.IdRef="If_40">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_225">index == 0</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg1:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <If sap:VirtualizedContainerService.HintSize="484,210" sap2010:WorkflowViewState.IdRef="If_39">
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_226">regexOutput.First().ToString().Contains("(") || regexOutput.First().ToString().Contains(")")</mca:CSharpValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <ui:AddDataRow DataRow="{x:Null}" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_18">
                            <ui:AddDataRow.ArrayRow>
                              <InArgument x:TypeArguments="s:Object[]">
                                <mca:CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_227">new String[]{"Profitable in latest Financial Statement (Latest Full Year)", "No"}</mca:CSharpValue>
                              </InArgument>
                            </ui:AddDataRow.ArrayRow>
                            <ui:AddDataRow.DataTable>
                              <InOutArgument x:TypeArguments="sd:DataTable">
                                <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_100">outputTable</mca:CSharpReference>
                              </InOutArgument>
                            </ui:AddDataRow.DataTable>
                          </ui:AddDataRow>
                        </If.Then>
                        <If.Else>
                          <ui:AddDataRow DataRow="{x:Null}" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_19">
                            <ui:AddDataRow.ArrayRow>
                              <InArgument x:TypeArguments="s:Object[]">
                                <mca:CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_228">new String[]{"Profitable in latest Financial Statement (Latest Full Year)", "Yes"}</mca:CSharpValue>
                              </InArgument>
                            </ui:AddDataRow.ArrayRow>
                            <ui:AddDataRow.DataTable>
                              <InOutArgument x:TypeArguments="sd:DataTable">
                                <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_101">outputTable</mca:CSharpReference>
                              </InOutArgument>
                            </ui:AddDataRow.DataTable>
                          </ui:AddDataRow>
                        </If.Else>
                      </If>
                    </If.Then>
                  </If>
                  <If sap:VirtualizedContainerService.HintSize="798,210" sap2010:WorkflowViewState.IdRef="If_44">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_235">index == 1 || index == 2 || index == 3</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_52">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Double">
                            <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_107">Dictionary[row[0].ToString()]</mca:CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Double">
                            <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_243">Convert.ToDouble(regexOutput.First().ToString().Split(' ')[0].ToString())</mca:CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Then>
                  </If>
                  <If sap:VirtualizedContainerService.HintSize="798,514" sap2010:WorkflowViewState.IdRef="If_43">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_229">index == 4</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg1:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <If sap:VirtualizedContainerService.HintSize="653,364" sap2010:WorkflowViewState.IdRef="If_45">
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_237">regexOutput.First().ToString().Contains("(") || regexOutput.First().ToString().Contains(")")</mca:CSharpValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_47">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg1:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:AddDataRow DataRow="{x:Null}" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="AddDataRow_22">
                              <ui:AddDataRow.ArrayRow>
                                <InArgument x:TypeArguments="s:Object[]">
                                  <mca:CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_238">new String[] {"Total Net Worth (Total Equity)", "Negative"}</mca:CSharpValue>
                                </InArgument>
                              </ui:AddDataRow.ArrayRow>
                              <ui:AddDataRow.DataTable>
                                <InOutArgument x:TypeArguments="sd:DataTable">
                                  <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_108">outputTable</mca:CSharpReference>
                                </InOutArgument>
                              </ui:AddDataRow.DataTable>
                            </ui:AddDataRow>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_53">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Double">
                                  <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_109">Dictionary["Capital"]</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Double">
                                  <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_244">Convert.ToDouble(regexOutput.First().ToString().Replace(",","").Replace("(","").Replace(")",""))</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_48">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg1:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:AddDataRow DataRow="{x:Null}" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="AddDataRow_23">
                              <ui:AddDataRow.ArrayRow>
                                <InArgument x:TypeArguments="s:Object[]">
                                  <mca:CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_240">new String[] {"Total Net Worth (Total Equity)", "Positive"}</mca:CSharpValue>
                                </InArgument>
                              </ui:AddDataRow.ArrayRow>
                              <ui:AddDataRow.DataTable>
                                <InOutArgument x:TypeArguments="sd:DataTable">
                                  <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_110">outputTable</mca:CSharpReference>
                                </InOutArgument>
                              </ui:AddDataRow.DataTable>
                            </ui:AddDataRow>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_54">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Double">
                                  <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_111">Dictionary["Capital"]</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Double">
                                  <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_245">Convert.ToDouble(regexOutput.First().ToString().Replace(",",""))</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Else>
                      </If>
                    </If.Then>
                  </If>
                </Sequence>
              </ActivityAction>
            </ui:ForEachRow.Body>
            <ui:ForEachRow.CurrentIndex>
              <OutArgument x:TypeArguments="x:Int32">
                <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_102">index</mca:CSharpReference>
              </OutArgument>
            </ui:ForEachRow.CurrentIndex>
            <ui:ForEachRow.DataTable>
              <InArgument x:TypeArguments="sd:DataTable">
                <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_222">RegexTable</mca:CSharpValue>
              </InArgument>
            </ui:ForEachRow.DataTable>
            <sap:WorkflowViewStateService.ViewState>
              <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg1:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEachRow>
        </Sequence>
      </If.Then>
    </If>
    <If sap:VirtualizedContainerService.HintSize="521,393" sap2010:WorkflowViewState.IdRef="If_27">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_162">IsJascorp.Count() != 0</mca:CSharpValue>
        </InArgument>
      </If.Condition>
      <sap:WorkflowViewStateService.ViewState>
        <scg1:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg1:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="376,243" sap2010:WorkflowViewState.IdRef="Sequence_30">
          <sap:WorkflowViewStateService.ViewState>
            <scg1:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg1:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:BuildDataTable DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_4" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Field&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Value&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Field&gt;Net Profit&lt;/Field&gt;&#xA;    &lt;Value&gt;(?&amp;lt;=Total\scomprehensive\sincome\sfor\s\sthe\sfinancial\s(period|year)\s).*?(?=\s\s\s\s)&lt;/Value&gt;&#xA;  &lt;/TableName&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Field&gt;Current Assets&lt;/Field&gt;&#xA;    &lt;Value&gt;(?&amp;lt;=TOTAL\sASSETS\s).*?(?=\n)&lt;/Value&gt;&#xA;  &lt;/TableName&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Field&gt;Capital&lt;/Field&gt;&#xA;    &lt;Value&gt;(?&amp;lt;=TOTAL\sEQUITY\s).*?(?=\n)&lt;/Value&gt;&#xA;  &lt;/TableName&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Field&gt;Non-Current Liabilities&lt;/Field&gt;&#xA;    &lt;Value&gt;(?&amp;lt;=NON-CURRENT\sLIABILITIES\s[\w\W]*\s\d).*?(?=\n)&lt;/Value&gt;&#xA;  &lt;/TableName&gt;&#xA;&lt;/NewDataSet&gt;">
            <ui:BuildDataTable.DataTable>
              <OutArgument x:TypeArguments="sd:DataTable">
                <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_74">RegexTable</mca:CSharpReference>
              </OutArgument>
            </ui:BuildDataTable.DataTable>
          </ui:BuildDataTable>
          <ui:ForEachRow DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,427" sap2010:WorkflowViewState.IdRef="Sequence_33">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg1:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:Matches sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_14" IsBuilderTabModified="False" RegexOption="IgnoreCase, Compiled">
                    <ui:Matches.Input>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_177">extractedBankStatement</mca:CSharpValue>
                      </InArgument>
                    </ui:Matches.Input>
                    <ui:Matches.Pattern>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_176">row[1].ToString()</mca:CSharpValue>
                      </InArgument>
                    </ui:Matches.Pattern>
                    <ui:Matches.Result>
                      <OutArgument x:TypeArguments="scg1:IEnumerable(str:Match)">
                        <mca:CSharpReference x:TypeArguments="scg1:IEnumerable(str:Match)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_75">regexOutput</mca:CSharpReference>
                      </OutArgument>
                    </ui:Matches.Result>
                  </ui:Matches>
                  <If sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="If_30">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_178">index == 0</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg1:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <If sap:VirtualizedContainerService.HintSize="484,210" sap2010:WorkflowViewState.IdRef="If_29">
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_182">regexOutput.Last().ToString().Split(' ').Last().Contains("(") || regexOutput.Last().ToString().Split(' ').Last().Contains(")")</mca:CSharpValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <ui:AddDataRow DataRow="{x:Null}" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_14">
                            <ui:AddDataRow.ArrayRow>
                              <InArgument x:TypeArguments="s:Object[]">
                                <mca:CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_180">new String[]{"Profitable in latest Financial Statement (Latest Full Year)", "No"}</mca:CSharpValue>
                              </InArgument>
                            </ui:AddDataRow.ArrayRow>
                            <ui:AddDataRow.DataTable>
                              <InOutArgument x:TypeArguments="sd:DataTable">
                                <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_76">outputTable</mca:CSharpReference>
                              </InOutArgument>
                            </ui:AddDataRow.DataTable>
                          </ui:AddDataRow>
                        </If.Then>
                        <If.Else>
                          <ui:AddDataRow DataRow="{x:Null}" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_15">
                            <ui:AddDataRow.ArrayRow>
                              <InArgument x:TypeArguments="s:Object[]">
                                <mca:CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_181">new String[]{"Profitable in latest Financial Statement (Latest Full Year)", "Yes"}</mca:CSharpValue>
                              </InArgument>
                            </ui:AddDataRow.ArrayRow>
                            <ui:AddDataRow.DataTable>
                              <InOutArgument x:TypeArguments="sd:DataTable">
                                <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_77">outputTable</mca:CSharpReference>
                              </InOutArgument>
                            </ui:AddDataRow.DataTable>
                          </ui:AddDataRow>
                        </If.Else>
                      </If>
                    </If.Then>
                  </If>
                  <If sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="If_31">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_204">index == 1 || index == 2</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg1:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="382,603" sap2010:WorkflowViewState.IdRef="Sequence_34">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg1:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_35">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_71">ValueSplit</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_184">regexOutput.First().ToString()</mca:CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:InterruptibleWhile DisplayName="While" sap:VirtualizedContainerService.HintSize="340,319" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_7">
                          <ui:InterruptibleWhile.Body>
                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_31">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg1:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_36">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_72">ValueSplit</mca:CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_172">ValueSplit.Substring(1)</mca:CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </ui:InterruptibleWhile.Body>
                          <ui:InterruptibleWhile.Condition>
                            <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_171">ValueSplit.Split(' ')[0] == ""</mca:CSharpValue>
                          </ui:InterruptibleWhile.Condition>
                        </ui:InterruptibleWhile>
                        <If sap:VirtualizedContainerService.HintSize="340,52" sap2010:WorkflowViewState.IdRef="If_32">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_185">index == 1</mca:CSharpValue>
                            </InArgument>
                          </If.Condition>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg1:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_37">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Double">
                                  <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_73">Dictionary["Current Assets"]</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Double">
                                  <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_187">Convert.ToDouble(ValueSplit.Split(' ')[0].ToString().Replace(",",""))</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Then>
                          <If.Else>
                            <Sequence sap:VirtualizedContainerService.HintSize="695,456" sap2010:WorkflowViewState.IdRef="Sequence_40">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg1:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If sap:VirtualizedContainerService.HintSize="653,364" sap2010:WorkflowViewState.IdRef="If_36">
                                <If.Condition>
                                  <InArgument x:TypeArguments="x:Boolean">
                                    <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_205">ValueSplit.Split(' ')[0].ToString().Contains("(") || ValueSplit.Split(' ')[0].ToString().Contains(")")</mca:CSharpValue>
                                  </InArgument>
                                </If.Condition>
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_41">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg1:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:AddDataRow DataRow="{x:Null}" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="AddDataRow_16">
                                      <ui:AddDataRow.ArrayRow>
                                        <InArgument x:TypeArguments="s:Object[]">
                                          <mca:CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_206">new String[] {"Total Net Worth (Total Equity)", "Negative"}</mca:CSharpValue>
                                        </InArgument>
                                      </ui:AddDataRow.ArrayRow>
                                      <ui:AddDataRow.DataTable>
                                        <InOutArgument x:TypeArguments="sd:DataTable">
                                          <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_91">outputTable</mca:CSharpReference>
                                        </InOutArgument>
                                      </ui:AddDataRow.DataTable>
                                    </ui:AddDataRow>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_48">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Double">
                                          <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_92">Dictionary["Capital"]</mca:CSharpReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Double">
                                          <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_207">Convert.ToDouble(ValueSplit.Split(' ')[0].ToString().Replace(",","").Replace("(","").Replace(")",""))</mca:CSharpValue>
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_42">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg1:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:AddDataRow DataRow="{x:Null}" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="AddDataRow_17">
                                      <ui:AddDataRow.ArrayRow>
                                        <InArgument x:TypeArguments="s:Object[]">
                                          <mca:CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_208">new String[] {"Total Net Worth (Total Equity)", "Positive"}</mca:CSharpValue>
                                        </InArgument>
                                      </ui:AddDataRow.ArrayRow>
                                      <ui:AddDataRow.DataTable>
                                        <InOutArgument x:TypeArguments="sd:DataTable">
                                          <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_93">outputTable</mca:CSharpReference>
                                        </InOutArgument>
                                      </ui:AddDataRow.DataTable>
                                    </ui:AddDataRow>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_38">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Double">
                                          <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_79">Dictionary["Capital"]</mca:CSharpReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Double">
                                          <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_188">Convert.ToDouble(ValueSplit.Split(' ')[0].ToString().Replace(",",""))</mca:CSharpValue>
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </If.Then>
                  </If>
                  <If sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="If_33">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_189">index == 3</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg1:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <If sap:VirtualizedContainerService.HintSize="803,960" sap2010:WorkflowViewState.IdRef="If_34">
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_191">regexOutput.Count() != 0</mca:CSharpValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="382,810" sap2010:WorkflowViewState.IdRef="Sequence_36">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg1:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_39">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_80">ValueSplit</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_192">regexOutput.First().ToString()</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:InterruptibleWhile DisplayName="While" sap:VirtualizedContainerService.HintSize="340,319" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_8">
                              <ui:InterruptibleWhile.Body>
                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_35">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg1:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_40">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">
                                        <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_81">ValueSplit</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_194">ValueSplit.Substring(1)</mca:CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </ui:InterruptibleWhile.Body>
                              <ui:InterruptibleWhile.Condition>
                                <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_193">ValueSplit.Split(' ')[0] == ""</mca:CSharpValue>
                              </ui:InterruptibleWhile.Condition>
                            </ui:InterruptibleWhile>
                            <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_41">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Double">
                                  <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_82">Dictionary["Non-Current Liabilities"]</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Double">
                                  <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_195">Convert.ToDouble(ValueSplit.Split(' ')[0].ToString().Replace(",",""))</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:Matches sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="Matches_15" IsBuilderTabModified="False" Pattern="((.*\n){1})(?=TOTAL\sLIABILITIES)" RegexOption="IgnoreCase, Compiled">
                              <ui:Matches.Input>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_196">extractedBankStatement</mca:CSharpValue>
                                </InArgument>
                              </ui:Matches.Input>
                              <ui:Matches.Result>
                                <OutArgument x:TypeArguments="scg1:IEnumerable(str:Match)">
                                  <mca:CSharpReference x:TypeArguments="scg1:IEnumerable(str:Match)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_84">regexOutput</mca:CSharpReference>
                                </OutArgument>
                              </ui:Matches.Result>
                            </ui:Matches>
                            <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_43">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Double">
                                  <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_85">Dictionary["Current Liabilities"]</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Double">
                                  <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_197">Convert.ToDouble(regexOutput.First().ToString().Split(' ')[0])</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap:VirtualizedContainerService.HintSize="376,343" sap2010:WorkflowViewState.IdRef="Sequence_37">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg1:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_42">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Double">
                                  <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_83">Dictionary["Non-Current Liabilities"]</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Double">0</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:Matches sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_16" IsBuilderTabModified="False" Pattern="(?&lt;=TOTAL\sLIABILITIES\s).*?(?=\n)" RegexOption="IgnoreCase, Compiled">
                              <ui:Matches.Input>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_198">extractedBankStatement</mca:CSharpValue>
                                </InArgument>
                              </ui:Matches.Input>
                              <ui:Matches.Result>
                                <OutArgument x:TypeArguments="scg1:IEnumerable(str:Match)">
                                  <mca:CSharpReference x:TypeArguments="scg1:IEnumerable(str:Match)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_86">regexOutput</mca:CSharpReference>
                                </OutArgument>
                              </ui:Matches.Result>
                            </ui:Matches>
                            <If sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="If_35">
                              <If.Condition>
                                <InArgument x:TypeArguments="x:Boolean">
                                  <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_199">regexOutput.Count() != 0</mca:CSharpValue>
                                </InArgument>
                              </If.Condition>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg1:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="382,611" sap2010:WorkflowViewState.IdRef="Sequence_39">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg1:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_44">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">
                                        <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_87">ValueSplit</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_200">regexOutput.First().ToString()</mca:CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:InterruptibleWhile DisplayName="While" sap:VirtualizedContainerService.HintSize="340,319" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_9">
                                    <ui:InterruptibleWhile.Body>
                                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg1:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_45">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">
                                              <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_88">ValueSplit</mca:CSharpReference>
                                            </OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">
                                              <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_202">ValueSplit.Substring(1)</mca:CSharpValue>
                                            </InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </ui:InterruptibleWhile.Body>
                                    <ui:InterruptibleWhile.Condition>
                                      <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_201">ValueSplit.Split(' ')[0] == ""</mca:CSharpValue>
                                    </ui:InterruptibleWhile.Condition>
                                  </ui:InterruptibleWhile>
                                  <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_46">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Double">
                                        <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_89">Dictionary["Current Liabilities"]</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Double">
                                        <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_203">Convert.ToDouble(ValueSplit.Split(' ')[0].ToString())</mca:CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_47">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Double">
                                      <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_90">Dictionary["Current Liabilities"]</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Double">0</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Else>
                            </If>
                          </Sequence>
                        </If.Else>
                      </If>
                    </If.Then>
                  </If>
                </Sequence>
              </ActivityAction>
            </ui:ForEachRow.Body>
            <ui:ForEachRow.CurrentIndex>
              <OutArgument x:TypeArguments="x:Int32">
                <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_78">index</mca:CSharpReference>
              </OutArgument>
            </ui:ForEachRow.CurrentIndex>
            <ui:ForEachRow.DataTable>
              <InArgument x:TypeArguments="sd:DataTable">
                <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_175">RegexTable</mca:CSharpValue>
              </InArgument>
            </ui:ForEachRow.DataTable>
            <sap:WorkflowViewStateService.ViewState>
              <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg1:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEachRow>
        </Sequence>
      </If.Then>
    </If>
    <If sap:VirtualizedContainerService.HintSize="521,210" sap2010:WorkflowViewState.IdRef="If_47">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_248">IsJascorp.Count() == 0 &amp;&amp; IsMaryChia.Count() == 0 &amp;&amp; IsVRV.Count() == 0</mca:CSharpValue>
        </InArgument>
      </If.Condition>
      <If.Then>
        <ui:ForEachRow DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
          <ui:ForEachRow.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,519" sap2010:WorkflowViewState.IdRef="Sequence_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg1:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:Matches sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_1" IsBuilderTabModified="False" RegexOption="IgnoreCase, Compiled">
                  <ui:Matches.Input>
                    <InArgument x:TypeArguments="x:String">
                      <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">extractedBankStatement</mca:CSharpValue>
                    </InArgument>
                  </ui:Matches.Input>
                  <ui:Matches.Pattern>
                    <InArgument x:TypeArguments="x:String">
                      <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_2">row[1].ToString()</mca:CSharpValue>
                    </InArgument>
                  </ui:Matches.Pattern>
                  <ui:Matches.Result>
                    <OutArgument x:TypeArguments="scg1:IEnumerable(str:Match)">
                      <mca:CSharpReference x:TypeArguments="scg1:IEnumerable(str:Match)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_7">regexOutput</mca:CSharpReference>
                    </OutArgument>
                  </ui:Matches.Result>
                </ui:Matches>
                <If sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="If_10">
                  <If.Condition>
                    <InArgument x:TypeArguments="x:Boolean">
                      <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_39">index == 0</mca:CSharpValue>
                    </InArgument>
                  </If.Condition>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg1:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="731,1551" sap2010:WorkflowViewState.IdRef="Sequence_20">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="scg1:IEnumerable(str:Match)" Name="isNegative" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg1:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If sap:VirtualizedContainerService.HintSize="689,210" sap2010:WorkflowViewState.IdRef="If_19">
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_112">regexOutput.Count() == 0</mca:CSharpValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <ui:Matches sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_7" IsBuilderTabModified="False" Pattern="(?&lt;=(income|loss|Loss|Income|Profit|profit)\sfor\sthe\syear\s).*?(?=\s)" RegexOption="IgnoreCase, Compiled">
                            <ui:Matches.Input>
                              <InArgument x:TypeArguments="x:String">
                                <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_140">extractedBankStatement</mca:CSharpValue>
                              </InArgument>
                            </ui:Matches.Input>
                            <ui:Matches.Result>
                              <OutArgument x:TypeArguments="scg1:IEnumerable(str:Match)">
                                <mca:CSharpReference x:TypeArguments="scg1:IEnumerable(str:Match)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_55">regexOutput</mca:CSharpReference>
                              </OutArgument>
                            </ui:Matches.Result>
                          </ui:Matches>
                        </If.Then>
                        <If.Else>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_28">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">
                                <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_53">finalOutput</mca:CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">
                                <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_136">regexOutput.Last().ToString()</mca:CSharpValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Else>
                      </If>
                      <If sap:VirtualizedContainerService.HintSize="689,860" sap2010:WorkflowViewState.IdRef="If_21">
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_129">regexOutput.Count() == 0</mca:CSharpValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="382,710" sap2010:WorkflowViewState.IdRef="Sequence_23">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg1:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:Matches sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="Matches_6" IsBuilderTabModified="False" Pattern="(?&lt;=Gross\sprofit\s).*(?=\s.*\s)" RegexOption="IgnoreCase, Compiled">
                              <ui:Matches.Input>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_130">extractedBankStatement</mca:CSharpValue>
                                </InArgument>
                              </ui:Matches.Input>
                              <ui:Matches.Result>
                                <OutArgument x:TypeArguments="scg1:IEnumerable(str:Match)">
                                  <mca:CSharpReference x:TypeArguments="scg1:IEnumerable(str:Match)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_49">regexOutput</mca:CSharpReference>
                                </OutArgument>
                              </ui:Matches.Result>
                            </ui:Matches>
                            <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_50">ValueSplit</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_131">regexOutput.First().ToString()</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:InterruptibleWhile DisplayName="While" sap:VirtualizedContainerService.HintSize="340,319" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_4">
                              <ui:InterruptibleWhile.Body>
                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_22">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg1:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">
                                        <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_51">ValueSplit</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_133">ValueSplit.Substring(1)</mca:CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </ui:InterruptibleWhile.Body>
                              <ui:InterruptibleWhile.Condition>
                                <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_132">ValueSplit.Split(' ')[0] == ""</mca:CSharpValue>
                              </ui:InterruptibleWhile.Condition>
                            </ui:InterruptibleWhile>
                            <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_54">finalOutput</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_137">ValueSplit.Split(' ')[0]</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_29">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">
                                <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_56">finalOutput</mca:CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">
                                <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_141">regexOutput.Last().ToString()</mca:CSharpValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Else>
                      </If>
                      <ui:Matches sap:VirtualizedContainerService.HintSize="689,59" sap2010:WorkflowViewState.IdRef="Matches_5" IsBuilderTabModified="False" Pattern="(-\d)" RegexOption="IgnoreCase, Compiled">
                        <ui:Matches.Input>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_138">finalOutput</mca:CSharpValue>
                          </InArgument>
                        </ui:Matches.Input>
                        <ui:Matches.Result>
                          <OutArgument x:TypeArguments="scg1:IEnumerable(str:Match)">
                            <mca:CSharpReference x:TypeArguments="scg1:IEnumerable(str:Match)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_48">isNegative</mca:CSharpReference>
                          </OutArgument>
                        </ui:Matches.Result>
                      </ui:Matches>
                      <If sap:VirtualizedContainerService.HintSize="689,210" sap2010:WorkflowViewState.IdRef="If_9">
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_139">finalOutput.Contains("(") || finalOutput.Contains(")") || isNegative.Count() != 0</mca:CSharpValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <ui:AddDataRow DataRow="{x:Null}" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_7">
                            <ui:AddDataRow.ArrayRow>
                              <InArgument x:TypeArguments="s:Object[]">
                                <mca:CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_41">new String[]{"Profitable in latest Financial Statement (Latest Full Year)", "No"}</mca:CSharpValue>
                              </InArgument>
                            </ui:AddDataRow.ArrayRow>
                            <ui:AddDataRow.DataTable>
                              <InOutArgument x:TypeArguments="sd:DataTable">
                                <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_22">outputTable</mca:CSharpReference>
                              </InOutArgument>
                            </ui:AddDataRow.DataTable>
                          </ui:AddDataRow>
                        </If.Then>
                        <If.Else>
                          <ui:AddDataRow DataRow="{x:Null}" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_11">
                            <ui:AddDataRow.ArrayRow>
                              <InArgument x:TypeArguments="s:Object[]">
                                <mca:CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_65">new String[]{"Profitable in latest Financial Statement (Latest Full Year)", "Yes"}</mca:CSharpValue>
                              </InArgument>
                            </ui:AddDataRow.ArrayRow>
                            <ui:AddDataRow.DataTable>
                              <InOutArgument x:TypeArguments="sd:DataTable">
                                <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_29">outputTable</mca:CSharpReference>
                              </InOutArgument>
                            </ui:AddDataRow.DataTable>
                          </ui:AddDataRow>
                        </If.Else>
                      </If>
                    </Sequence>
                  </If.Then>
                </If>
                <If sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="If_12">
                  <If.Condition>
                    <InArgument x:TypeArguments="x:Boolean">
                      <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_44">index == 4</mca:CSharpValue>
                    </InArgument>
                  </If.Condition>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg1:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="695,1965" sap2010:WorkflowViewState.IdRef="Sequence_19">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:Double" Name="IsDouble" />
                        <Variable x:TypeArguments="x:String" Name="Data" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg1:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="653,60" sap2010:WorkflowViewState.IdRef="Assign_30">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_58">ValueSplit</mca:CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_145">regexOutput.First().ToString()</mca:CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:InterruptibleWhile DisplayName="While" sap:VirtualizedContainerService.HintSize="653,319" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_5">
                        <ui:InterruptibleWhile.Body>
                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_25">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg1:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_31">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_59">ValueSplit</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_147">ValueSplit.Substring(1)</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </ui:InterruptibleWhile.Body>
                        <ui:InterruptibleWhile.Condition>
                          <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_215">ValueSplit.Split(' ')[0] == ""</mca:CSharpValue>
                        </ui:InterruptibleWhile.Condition>
                      </ui:InterruptibleWhile>
                      <If sap:VirtualizedContainerService.HintSize="653,210" sap2010:WorkflowViewState.IdRef="If_37">
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_216">ValueSplit.Contains("(") || ValueSplit.Contains(")")</mca:CSharpValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_49">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">
                                <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_94">Data</mca:CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">
                                <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_217">ValueSplit.Replace("(","").Replace(")","")</mca:CSharpValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                      </If>
                      <If sap:VirtualizedContainerService.HintSize="653,760" sap2010:WorkflowViewState.IdRef="If_23">
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_218">!Double.TryParse(Data.Split(' ')[0].Replace(",","").Replace("t","1").Replace("L","1").Replace("s","5"), out IsDouble)</mca:CSharpValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="382,610" sap2010:WorkflowViewState.IdRef="Sequence_26">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg1:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:Matches sap:VirtualizedContainerService.HintSize="340,59" sap2010:WorkflowViewState.IdRef="Matches_8" IsBuilderTabModified="False" Pattern="(?&lt;=Equity\sattributable\sto\sowners\sof\sthe\sCompany\s).*?(?=\n)" RegexOption="IgnoreCase, Compiled">
                              <ui:Matches.Input>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_144">extractedBankStatement</mca:CSharpValue>
                                </InArgument>
                              </ui:Matches.Input>
                              <ui:Matches.Result>
                                <OutArgument x:TypeArguments="scg1:IEnumerable(str:Match)">
                                  <mca:CSharpReference x:TypeArguments="scg1:IEnumerable(str:Match)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_57">regexOutput</mca:CSharpReference>
                                </OutArgument>
                              </ui:Matches.Result>
                            </ui:Matches>
                            <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_44">ValueSplit</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_100">regexOutput.First().ToString()</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:InterruptibleWhile DisplayName="While" sap:VirtualizedContainerService.HintSize="340,319" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_3">
                              <ui:InterruptibleWhile.Body>
                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg1:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">
                                        <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_45">ValueSplit</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_102">ValueSplit.Substring(1)</mca:CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </ui:InterruptibleWhile.Body>
                              <ui:InterruptibleWhile.Condition>
                                <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_117">ValueSplit.Split(' ')[0] == ""</mca:CSharpValue>
                              </ui:InterruptibleWhile.Condition>
                            </ui:InterruptibleWhile>
                          </Sequence>
                        </If.Then>
                      </If>
                      <If sap:VirtualizedContainerService.HintSize="653,364" sap2010:WorkflowViewState.IdRef="If_11">
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_125">ValueSplit.Split(' ')[0].Contains("(") || ValueSplit.Split(' ')[0].Contains(")") || ValueSplit.Split(' ')[0].Contains("-")</mca:CSharpValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_7">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg1:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:AddDataRow DataRow="{x:Null}" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="AddDataRow_9">
                              <ui:AddDataRow.ArrayRow>
                                <InArgument x:TypeArguments="s:Object[]">
                                  <mca:CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_46">new String[] {"Total Net Worth (Total Equity)", "Negative"}</mca:CSharpValue>
                                </InArgument>
                              </ui:AddDataRow.ArrayRow>
                              <ui:AddDataRow.DataTable>
                                <InOutArgument x:TypeArguments="sd:DataTable">
                                  <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_24">outputTable</mca:CSharpReference>
                                </InOutArgument>
                              </ui:AddDataRow.DataTable>
                            </ui:AddDataRow>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Double">
                                  <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_25">Dictionary[RegexTable.Rows[index].ItemArray[0].ToString()]</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Double">
                                  <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_126">Double.Parse(ValueSplit.Split(' ')[0].Replace(",","").Replace("t","1").Replace("(","-").Replace(")","").Replace("L","1").Replace("s","5"))</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_8">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg1:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:AddDataRow DataRow="{x:Null}" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="AddDataRow_10">
                              <ui:AddDataRow.ArrayRow>
                                <InArgument x:TypeArguments="s:Object[]">
                                  <mca:CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_48">new String[] {"Total Net Worth (Total Equity)", "Positive"}</mca:CSharpValue>
                                </InArgument>
                              </ui:AddDataRow.ArrayRow>
                              <ui:AddDataRow.DataTable>
                                <InOutArgument x:TypeArguments="sd:DataTable">
                                  <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_26">outputTable</mca:CSharpReference>
                                </InOutArgument>
                              </ui:AddDataRow.DataTable>
                            </ui:AddDataRow>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Double">
                                  <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_27">Dictionary[RegexTable.Rows[index].ItemArray[0].ToString()]</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Double">
                                  <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_124">Double.Parse(ValueSplit.Split(' ')[0].Replace(",","").Replace("t","1").Replace("L","1").Replace("s","5"))</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </If.Then>
                </If>
                <If sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="If_6">
                  <If.Condition>
                    <InArgument x:TypeArguments="x:Boolean">
                      <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_66">index == 1 || index == 2</mca:CSharpValue>
                    </InArgument>
                  </If.Condition>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg1:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="1224,1345" sap2010:WorkflowViewState.IdRef="Sequence_14">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg1:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If sap:VirtualizedContainerService.HintSize="1182,1253" sap2010:WorkflowViewState.IdRef="If_20">
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_115">regexOutput.Count() != 0</mca:CSharpValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="382,611" sap2010:WorkflowViewState.IdRef="Sequence_21">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg1:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_39">ValueSplit</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_84">regexOutput.First().ToString()</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:InterruptibleWhile DisplayName="While" sap:VirtualizedContainerService.HintSize="340,319" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
                              <ui:InterruptibleWhile.Body>
                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg1:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">
                                        <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_40">ValueSplit</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_86">ValueSplit.Substring(1)</mca:CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </ui:InterruptibleWhile.Body>
                              <ui:InterruptibleWhile.Condition>
                                <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_98">ValueSplit.Split(' ')[0] == ""</mca:CSharpValue>
                              </ui:InterruptibleWhile.Condition>
                            </ui:InterruptibleWhile>
                            <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Double">
                                  <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_30">Dictionary[RegexTable.Rows[index].ItemArray[0].ToString()]</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Double">
                                  <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_120">Double.Parse(ValueSplit.Split(' ')[0].Replace(",","").Replace("t","1").Replace("L","1"))</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap:VirtualizedContainerService.HintSize="755,1103" sap2010:WorkflowViewState.IdRef="Sequence_27">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg1:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If sap:VirtualizedContainerService.HintSize="713,210" sap2010:WorkflowViewState.IdRef="If_24">
                              <If.Condition>
                                <InArgument x:TypeArguments="x:Boolean">
                                  <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_149">index == 1</mca:CSharpValue>
                                </InArgument>
                              </If.Condition>
                              <If.Then>
                                <ui:Matches sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_9" IsBuilderTabModified="False" Pattern="(?&lt;=Current\sassets\s[\w\W]*\s\s\s\s).*?(?=\s)" RegexOption="IgnoreCase, Compiled">
                                  <ui:Matches.Input>
                                    <InArgument x:TypeArguments="x:String">
                                      <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_150">extractedBankStatement</mca:CSharpValue>
                                    </InArgument>
                                  </ui:Matches.Input>
                                  <ui:Matches.Result>
                                    <OutArgument x:TypeArguments="scg1:IEnumerable(str:Match)">
                                      <mca:CSharpReference x:TypeArguments="scg1:IEnumerable(str:Match)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_60">regexOutput</mca:CSharpReference>
                                    </OutArgument>
                                  </ui:Matches.Result>
                                </ui:Matches>
                              </If.Then>
                              <If.Else>
                                <ui:Matches sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_10" IsBuilderTabModified="False" Pattern="(?&lt;=Current\sliabilities\s[\w\W]*\s\s\s\s).*?(?=\s)" RegexOption="IgnoreCase, Compiled">
                                  <ui:Matches.Input>
                                    <InArgument x:TypeArguments="x:String">
                                      <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_151">extractedBankStatement</mca:CSharpValue>
                                    </InArgument>
                                  </ui:Matches.Input>
                                  <ui:Matches.Result>
                                    <OutArgument x:TypeArguments="scg1:IEnumerable(str:Match)">
                                      <mca:CSharpReference x:TypeArguments="scg1:IEnumerable(str:Match)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_61">regexOutput</mca:CSharpReference>
                                    </OutArgument>
                                  </ui:Matches.Result>
                                </ui:Matches>
                              </If.Else>
                            </If>
                            <If sap:VirtualizedContainerService.HintSize="713,761" sap2010:WorkflowViewState.IdRef="If_25">
                              <If.Condition>
                                <InArgument x:TypeArguments="x:Boolean">
                                  <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_152">regexOutput.Count() != 0</mca:CSharpValue>
                                </InArgument>
                              </If.Condition>
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="382,611" sap2010:WorkflowViewState.IdRef="Sequence_29">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg1:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_32">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">
                                        <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_62">ValueSplit</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_153">regexOutput.First().ToString()</mca:CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:InterruptibleWhile DisplayName="While" sap:VirtualizedContainerService.HintSize="340,319" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_6">
                                    <ui:InterruptibleWhile.Body>
                                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_28">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg1:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_33">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">
                                              <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_63">ValueSplit</mca:CSharpReference>
                                            </OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">
                                              <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_155">ValueSplit.Substring(1)</mca:CSharpValue>
                                            </InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </ui:InterruptibleWhile.Body>
                                    <ui:InterruptibleWhile.Condition>
                                      <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_154">ValueSplit.Split(' ')[0] == ""</mca:CSharpValue>
                                    </ui:InterruptibleWhile.Condition>
                                  </ui:InterruptibleWhile>
                                  <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_34">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Double">
                                        <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_64">Dictionary[RegexTable.Rows[index].ItemArray[0].ToString()]</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Double">
                                        <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_156">Double.Parse(ValueSplit.Split(' ')[0].Replace(",","").Replace("t","1").Replace("L","1"))</mca:CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Double">
                                      <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_47">Dictionary[RegexTable.Rows[index].ItemArray[0].ToString()]</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Double">0</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Else>
                            </If>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </If.Then>
                </If>
                <If sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="If_2">
                  <If.Condition>
                    <InArgument x:TypeArguments="x:Boolean">
                      <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_73">index == 3</mca:CSharpValue>
                    </InArgument>
                  </If.Condition>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg1:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <If sap:VirtualizedContainerService.HintSize="1267,911" sap2010:WorkflowViewState.IdRef="If_16">
                      <If.Condition>
                        <InArgument x:TypeArguments="x:Boolean">
                          <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_74">regexOutput.Count() == 0</mca:CSharpValue>
                        </InArgument>
                      </If.Condition>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="611,401" sap2010:WorkflowViewState.IdRef="Sequence_13">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg1:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:Matches sap:VirtualizedContainerService.HintSize="569,59" sap2010:WorkflowViewState.IdRef="Matches_3" IsBuilderTabModified="False" Pattern="(?&lt;=Non-current\sliability\s\s).*?(?=\s\s)" RegexOption="IgnoreCase, Compiled">
                            <ui:Matches.Input>
                              <InArgument x:TypeArguments="x:String">
                                <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_75">extractedBankStatement</mca:CSharpValue>
                              </InArgument>
                            </ui:Matches.Input>
                            <ui:Matches.Result>
                              <OutArgument x:TypeArguments="scg1:IEnumerable(str:Match)">
                                <mca:CSharpReference x:TypeArguments="scg1:IEnumerable(str:Match)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_33">regexOutput</mca:CSharpReference>
                              </OutArgument>
                            </ui:Matches.Result>
                          </ui:Matches>
                          <If sap:VirtualizedContainerService.HintSize="569,210" sap2010:WorkflowViewState.IdRef="If_15">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_76">regexOutput.Count() == 0</mca:CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Double">
                                    <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_34">Dictionary[RegexTable.Rows[index].ItemArray[0].ToString()]</mca:CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Double">
                                    <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_77">0.0</mca:CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                            </If.Then>
                            <If.Else>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Double">
                                    <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_35">Dictionary[RegexTable.Rows[index].ItemArray[0].ToString()]</mca:CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Double">
                                    <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_121">Double.Parse(regexOutput.First().ToString().Split(' ').Last().ToString().Replace(",","").Replace("t","1").Replace("L","1"))</mca:CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                            </If.Else>
                          </If>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="611,761" sap2010:WorkflowViewState.IdRef="Sequence_17">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg1:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="569,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">
                                <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_41">ValueSplit</mca:CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">
                                <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_90">regexOutput.First().ToString()</mca:CSharpValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:InterruptibleWhile DisplayName="While" sap:VirtualizedContainerService.HintSize="569,319" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_2">
                            <ui:InterruptibleWhile.Body>
                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg1:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg1:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">
                                      <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_42">ValueSplit</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">
                                      <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_92">ValueSplit.Substring(1)</mca:CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </ui:InterruptibleWhile.Body>
                            <ui:InterruptibleWhile.Condition>
                              <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_99">ValueSplit.Split(' ')[0] == ""</mca:CSharpValue>
                            </ui:InterruptibleWhile.Condition>
                          </ui:InterruptibleWhile>
                          <If sap:VirtualizedContainerService.HintSize="569,210" sap2010:WorkflowViewState.IdRef="If_18">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_94">ValueSplit.Split(' ')[0] == "-"</mca:CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Double">
                                    <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_43">Dictionary[RegexTable.Rows[index].ItemArray[0].ToString()]</mca:CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Double">
                                    <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_95">0.0</mca:CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                            </If.Then>
                            <If.Else>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Double">
                                    <mca:CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_36">Dictionary[RegexTable.Rows[index].ItemArray[0].ToString()]</mca:CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Double">
                                    <mca:CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_122">Double.Parse(ValueSplit.Split(' ')[0].Replace(",","").Replace("t","1").Replace("L","1"))</mca:CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                            </If.Else>
                          </If>
                        </Sequence>
                      </If.Else>
                    </If>
                  </If.Then>
                </If>
              </Sequence>
            </ActivityAction>
          </ui:ForEachRow.Body>
          <ui:ForEachRow.CurrentIndex>
            <OutArgument x:TypeArguments="x:Int32">
              <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_10">index</mca:CSharpReference>
            </OutArgument>
          </ui:ForEachRow.CurrentIndex>
          <ui:ForEachRow.DataTable>
            <InArgument x:TypeArguments="sd:DataTable">
              <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1">RegexTable</mca:CSharpValue>
            </InArgument>
          </ui:ForEachRow.DataTable>
          <sap:WorkflowViewStateService.ViewState>
            <scg1:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg1:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEachRow>
      </If.Then>
    </If>
    <ui:AddDataRow DataRow="{x:Null}" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="521,22" sap2010:WorkflowViewState.IdRef="AddDataRow_1">
      <ui:AddDataRow.ArrayRow>
        <InArgument x:TypeArguments="s:Object[]">
          <mca:CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">new String[]{"Current Ratio",(Dictionary["Current Assets"]/Dictionary["Current Liabilities"]).ToString("N2")}</mca:CSharpValue>
        </InArgument>
      </ui:AddDataRow.ArrayRow>
      <ui:AddDataRow.DataTable>
        <InOutArgument x:TypeArguments="sd:DataTable">
          <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_11">outputTable</mca:CSharpReference>
        </InOutArgument>
      </ui:AddDataRow.DataTable>
    </ui:AddDataRow>
    <ui:AddDataRow DataRow="{x:Null}" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="521,22" sap2010:WorkflowViewState.IdRef="AddDataRow_2">
      <ui:AddDataRow.ArrayRow>
        <InArgument x:TypeArguments="s:Object[]">
          <mca:CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_12">new String[]{"Gearing Ratio",((Dictionary["Current Liabilities"] + Dictionary["Non-Current Liabilities"]) / Dictionary["Capital"]).ToString("N2")}</mca:CSharpValue>
        </InArgument>
      </ui:AddDataRow.ArrayRow>
      <ui:AddDataRow.DataTable>
        <InOutArgument x:TypeArguments="sd:DataTable">
          <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_13">outputTable</mca:CSharpReference>
        </InOutArgument>
      </ui:AddDataRow.DataTable>
    </ui:AddDataRow>
    <ui:WriteRange AddHeaders="True" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="521,115" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="Sheet1" StartingCell="A1" WorkbookPath="Excel output files/Financial Statement Output.xlsx">
      <ui:WriteRange.DataTable>
        <InArgument x:TypeArguments="sd:DataTable">
          <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">outputTable</mca:CSharpValue>
        </InArgument>
      </ui:WriteRange.DataTable>
    </ui:WriteRange>
  </Sequence>
</Activity>